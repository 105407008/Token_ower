pragma solidity ^0.4.21;

contract Token {
    address public owner;
    mapping (address => uint256) private balances;
    
    function getBalance (address _account) public constant returns (uint256){
        return balances[_account];
    }
        modifier OnlyOwner {
        require(msg.sender == owner);
        _;
    }
    
    function Token(uint256 _initialSupply) public{
        balances[msg.sender] = _initialSupply;
         owner = msg.sender;
    }
    function transfer(address _to,uint256 _value) public{
        require(balances[msg.sender] >=_value);
        require(balances[_to] + _value >=balances[_to]);
        balances[msg.sender] -=_value;
        balances[_to] +=_value;
        
    }
    
}
